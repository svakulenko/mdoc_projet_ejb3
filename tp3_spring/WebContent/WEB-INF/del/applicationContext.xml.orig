<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">

	
	<!-- Because we're currently using "increment" attribute in hbm file, we dont
		need
		to explicitly initialize id value of all class :)
	-->

	<!-- MAIN BEANS  START -->
	<!-- BEAN FOR CONTACT -->
	<bean id="homenumberContact" class="domain.PhoneNumber">
		<property name="phoneKind" value="home"/>
		<property name="phoneNumber" value="99999"/>
		<property name="contact" ref="contact"/>

	</bean>


	<bean id="mobilenumberContact" class="domain.PhoneNumber">
		<property name="phoneKind" value="mobile"/>
		<property name="phoneNumber" value="88888"/>
		<property name="contact" ref="contact"/>
	</bean>			

	<bean id="address" class="domain.Address">
		<property name="street" value="rue address"/>
		<property name="city" value="city address"/>
		<property name="zip" value="75000"/>
		<property name="country" value="France"/>
		<!-- <property name="contact" ref="contact"/>
		-->
	</bean>

	<bean id="contactgroupContact" class="domain.ContactGroup">
		<property name="groupName" value="Default Name"/>
		<property name="contacts">
			<set>
				<ref bean="contact"/>
			</set>
		</property>
	</bean>
	

	<bean id="contact" class="domain.Contact">
		<property name="email" value="spring@gmail.com"/>
		<property name="firstName" value="Contact First"/>
		<property name="lastName"  value="Contact Last"/>
		<property name="address" 	   ref="address"/>
		<property name="phoneNumbers">
			<set>
				<ref bean="homenumberContact"/>
				<ref bean="mobilenumberContact"/>
			</set>
		</property>
		<property name="contactgroup">
			<set>
				<ref bean="contactgroupContact"/>
			</set>
		</property>
	</bean>
	
	<!-- BEANs for entreprise -->
	<bean id="homenumberEntreprise" class="domain.PhoneNumber">
		<property name="phoneKind" value="home"/>
		<property name="phoneNumber" value="99999"/>
		<property name="contact" ref="entreprise"/>

	</bean>


	<bean id="mobilenumberEntreprise" class="domain.PhoneNumber">
		<property name="phoneKind" value="mobile"/>
		<property name="phoneNumber" value="88888"/>
		<property name="contact" ref="entreprise"/>
	</bean>
			

	<bean id="contactgroupEntreprise" class="domain.ContactGroup">
		<property name="groupName" value="Default Name"/>
		<property name="contacts">
			<set>
				<ref bean="entreprise"/>
			</set>
		</property>
	</bean>
	
	
	<bean id="entreprise" class="domain.Entreprise">
		<property name="numSiret" value="1111111" />
		<property name="email" value="spring@gmail.com"/>
		<property name="firstName" value="Entreprise First"/>
		<property name="lastName"  value="Entreprise Last"/>
		<property name="address" 	   ref="address"/>
		<property name="phoneNumbers">
			<set>
				<ref bean="homenumberEntreprise"/>
				<ref bean="mobilenumberEntreprise"/>
			</set>
		</property>
		<property name="contactgroup">
			<set>
				<ref bean="contactgroupEntreprise"/>
			</set>
		</property>
		
	</bean>



	<!-- DAO CONTACT, CODE INJECTION WITH CONSTRUCTOR <bean id="daoContactConstructor"
		class="daoImpl.DAOContact">
		<constructor-arg
		ref="contact"/>
	</bean>
	
	<bean
		id="daoEntrepriseConstructor" class="daoImpl.DAOEntreprise">
		<constructor-arg
		ref="entreprise"/>
	</bean>
	-->

	<!-- DAO CONTACT, CODE INJECTION WITH PARAMETER (DEFAULT) -->
	<bean id="daoContactProperty" class="daoImpl.DAOContact">
		<property name="contact" ref="contact"/>
		<property name="sessionFactory" ref="sessionFactory"/>
		<!-- Spring Hibernate declaration-->
	</bean>

	<bean id="daoEntrepriseProperty" class="daoImpl.DAOEntreprise">
		<property name="entreprise" ref="entreprise"/>
		<property name="sessionFactory" ref="sessionFactory"/>
		<!-- Spring Hibernate declaration-->
	</bean>
	<!-- DAO HIBERNATE MANAGER. INHERITH HIM, IF YOU NEED TO Hibernate fonctionality
	<bean
		id="daohibernatemanager"
		class="daoImpl.DAOHibernateManager">
		<property
		name="sessionFactory"
		ref="mySessionFactory"/>
	</bean>
		

	-->
	
	
	<bean id="emailerLogger" class="aspect.EmailLogger"/>
	<bean id="inputVerification" class="aspect.InputValidation"/>
	<aop:config>
		<aop:aspect id="addContact" ref="inputVerification">		
			<aop:before pointcut="execution(* daoImpl.DAOContact.addContact(*,*, *, *,*,*,*,*,*)) 
				and args(firstName,lastName,email,street,city,zip,country,phoneKind,phoneNumber)"
					    method="validateBefore"
						arg-names="firstName,lastName,email,street,city,zip,country,phoneKind,phoneNumber"/>
			<aop:after-returning pointcut="execution(* daoImpl.DAOContact.addContact(..))"
					    method="validateAfterReturning"
						/>
			<aop:after-throwing pointcut="execution(* daoImpl.DAOContact.addContact(..))"
					    method="validateAfterThrowing"
						/>
		</aop:aspect>		
	</aop:config>
	
	
	<!-- MAIN BEANS  END -->


	<!-- HIBERNATE PART START -->


	<!-- SESSION FACTORY BEAN -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="mappingResources">
			<list>
				<value>domain/phonenumber.hbm.xml</value>
				<value>domain/address.hbm.xml</value>
				<value>domain/contact.hbm.xml</value>
				<value>domain/contactgroup.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
	</bean>
	<!-- DATA SOURCE -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<property name="url" value="jdbc:mysql://localhost/mdoc"/>

		<property name="username" value="root"/>
<<<<<<< HEAD
		<property name="password" value="rfynjhghfda"/>
=======
		<property name="password" value="******"/>
>>>>>>> 0a808d9e5a64a6adf958be724558c228e814c301
	</bean>



	<!--
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property
		name="sessionFactory"
		ref="sessionFactory"/>
	</bean>
	-->
	
	

	
	
</beans>
	

<!-- arg-names="firstName,lastName,email,street,city,zip,country,phoneKind,phoneNumber" 
and args(*,*,*,*,*,*,*,*,*)"/>
-->
